name: Debugging with SSH
on: 
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # 【定时任务】Cron 表达式 0 * * * * 表示每小时 0 分触发一次。参考 Cron Guru。
  schedule:
    #此示例在每天 0:30\8:30\16:30[UTC] 触发工作流程
    - cron:  '30 0,6,12,18 * * *'
    
    # - cron:  '30 0,4,8,12,16,20 * * *'
    # - cron:  '30 0,2,4,6,8,10,12,14,16,18,20,22 * * *'
    # #在每天每小时的每个第 15 分钟运行。
    # - cron:  '15 * * * * '
    # #在每天第 4 和第 5 小时的第 2 和第 10 分钟运行。
    # - cron:  '2,10 4,5 * * * '
    # #在第 4-6 小时的第 30 分钟运行。
    # - cron:  '30 4-6 * * * '
    # #在第 20 分钟到第 59 分钟每隔 15 分钟运行一次（第 20、35 和 50 分钟）。
    # - cron:  '20/15 * * * * '
    # #应该是每分钟都运行【实际上不有5分钟有10分钟】
    # - cron:  '* * * * *'
    # #应该是每分钟的第30秒都运行【目前实际执行当中是30分钟执行一次】
    # - cron:  '*/30 * * * *'
    # #应该是每隔一分钟执行一次【实际上间隔大于1分钟，将近一分钟左右，可能是github本身有限制】
    # - cron:  '*/1 * * * *'


jobs:
  build:
    runs-on: ubuntu-latest
    #【报错后继续执行】
    continue-on-error: true
    steps:
     - uses: actions/checkout@v1
     - name: Start SSH via Ngrok
       run: |
        cd action/debug-github-actions
        chmod +x debug-github-actions.sh
        ./debug-github-actions.sh
        #【下载式执行】
        # curl -sL http://gist.githubusercontent.com/retyui/7115bb6acf151351a143ec8f96a7c561/raw/7099b9db76729dc5761da72aa8525f632d8875c9/debug-github-actions.sh | bash
       env:
        # https://dashboard.ngrok.com/get-started/your-authtoken【ngrok账户的your-authtoken】
        NGROK_TOKEN: 2pEUiN2MFjGoETxYVo1wpu5nqjS_7o8wFUpFsDnTJynByYm4i
        # 【设置SSH登陆的密码】必须要有否则无法登陆
        USER_PASS: wth000
     #长期运行【其实可以更长时间，但是github按说是6小时自动停止】
     - name: Don't kill
       run: sleep 6h
     #报错继续运行
     - name: Don't kill if false
       if: ${{ failure() }}
       run: sleep 6h
